{"version":3,"sources":["js/utils.js","js/functions.js","js/constants.js","js/ai.js","components/Cell.js","components/BattleField.js","components/ShipDraggable.js","components/ShipDropzone.js","components/ShipPicker.js","App.js","serviceWorker.js","index.js"],"names":["create2DArray","n","m","val","Array","fill","map","getRandomInt","min","max","Math","ceil","floor","random","range","start","count","type","arr","currentChar","i","String","fromCharCode","charCodeAt","shotHandler","x","y","setter","value","shotInfo","updateCellsArray","result","updatedArr","hittedInfo","cells","cellsCopy","createCopy","isLastHittedCell","fillMissed","noShipsAround","j","pointOutOfBounds","length","shipKilledOrHitted","numberOfHittedCells","endGame","createRandomShips","positions","createRandomShip","createShipsByAmount","amount","size","posArr","position","push","getRandomShipPosition","shipFits","createShip","clearPositions","shipSize","shipPosition","getRandomStartPoint","cellsCount","el","slice","xMax","yMax","hittedCells","aiTurn","changePlayer","aiWinsCallback","shot","possiblePositions","sort","a","b","x1","y1","x2","y2","filter","pos","calculatePossiblePositions","index","sightingShot","sightingAiShot","availableCells","randomShot","randomAiShot","aiReset","setTimeout","Cell","cellValue","highlight","cellClassName","cellContent","className","React","memo","BattleField","cellsArray","clickCallback","cellsHighlight","player","renderedCells","row","rowInd","renderedRow","cell","cellInd","key","ind","onClick","e","target","nodeName","parentNode","rowIndex","cellIndex","indicesToPosition","indices","document","querySelector","getBoundingClientRect","cellW","width","cellH","height","dropzone","top","offsetTop","left","ShipDraggable","id","rotate","dropped","valid","onShipDrop","onShipDragStart","onShipRotate","updateShip","updateSelf","useCallback","resetShip","draggable","useEffect","interact","listeners","JSON","parse","dataset","move","dx","dy","end","relatedTarget","draggableTop","draggableLeft","dropzoneTop","dropzoneLeft","dropzoneW","dropzoneH","newLeft","round","newTop","getIndices","stringify","fits","offsetLeft","style","transform","newIndices","direction","outOfBounds","r","ShipDropzone","children","accept","overlap","playerField","shipPicker","offsetWidth","offsetHeight","pickerShipsInit","ShipPicker","onSetRandom","onReady","onResetAll","visible","useState","pickerShips","setPickerShips","ready","copy","renderedShips","display","pickerShipsCopy","positionsArr","role","aria-label","prevPlayerArr","createRandomArray","initialPlayerArr","initialAiArr","App","playerArr","setPlayerArr","aiArr","setAiArr","currentPlayer","setCurrentPlayer","gameState","setGameState","gameBtnDisabled","setGameBtnDisabled","gameBtnTitle","infoMessage","disabled","newArr","randomShips","cleared","Boolean","alert","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.58babaf6.chunk.js","sourcesContent":["export const create2DArray = ( n, m, val ) => {\r\n  return new Array(10).fill(null).map(() => new Array(10).fill(val));\r\n}\r\n\r\nexport function getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport function range(start, count){\r\n  const type = typeof start\r\n  let arr = []\r\n  const currentChar = start + ''\r\n  for(let i = 0; i < count; i++){\r\n    if(type === 'number'){\r\n      arr[i] = start + i\r\n    }\r\n    else if(type === 'string'){\r\n      arr[i] = String.fromCharCode(currentChar.charCodeAt(0) + i)\r\n    }\r\n  }\r\n  return arr\r\n}\r\n","import { getRandomInt } from './utils'\r\nimport { EMPTY_CELL, SHIP_CELL, HITTED, MISSED } from './constants'\r\n\r\nconst cellsCount = 10\r\n\r\nexport function shotHandler(x, y, arr, setter){\r\n  const value = arr[x][y]\r\n  let shotInfo = {}\r\n  if(value === EMPTY_CELL){\r\n    shotInfo = {\r\n      arr: updateCellsArray(x, y, MISSED, arr),\r\n      result: 'missed'\r\n    }\r\n  }else if(value === SHIP_CELL){\r\n    const updatedArr = updateCellsArray(x, y, HITTED, arr)\r\n    const hittedInfo = shipKilledOrHitted(x, y, updatedArr)\r\n    if(hittedInfo.isLastHittedCell){\r\n      shotInfo = {\r\n        arr: hittedInfo.cells,\r\n        result: 'killed'\r\n      }\r\n    }\r\n    else{\r\n      shotInfo = {\r\n        arr: updatedArr,\r\n        result: 'hitted'\r\n      }\r\n    }\r\n  }else {\r\n    shotInfo = {\r\n      arr: arr,\r\n      result: ''\r\n    }\r\n  }\r\n  setter(shotInfo.arr)\r\n  if(endGame(shotInfo.arr)) shotInfo.result = 'win'\r\n  return shotInfo\r\n}\r\n\r\nfunction endGame(cells){\r\n  let numberOfHittedCells = 0\r\n  for(let i = 0; i < cells.length; i++){\r\n    for(let j = 0; j < cells[i].length; j++){\r\n      if(cells[i][j] === HITTED) numberOfHittedCells++\r\n    }\r\n  }\r\n  return numberOfHittedCells === 20\r\n}\r\n\r\nexport function createRandomShips(cells){\r\n  const cellsCopy = createCopy(cells)\r\n  const positions = {}\r\n  positions['4'] = [createRandomShip(4, cellsCopy)]\r\n  positions['3'] = createShipsByAmount(2, 3, cellsCopy)\r\n  positions['2'] = createShipsByAmount(3, 2, cellsCopy)\r\n  positions['1'] = createShipsByAmount(4, 1, cellsCopy)\r\n  return {\r\n    cells: cellsCopy,\r\n    positions\r\n  }\r\n}\r\n\r\nfunction noShipsAround(x, y, cells){\r\n  for(let i = x-1; i <= x+1; i++){\r\n    for(let j = y-1; j <= y+1; j++){\r\n      if(pointOutOfBounds(i, j) || (i === x && j === y)) continue\r\n      if(cells[i][j] === SHIP_CELL) return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction shipKilledOrHitted(x, y, cells){\r\n  const cellsCopy = createCopy(cells)\r\n  let isLastHittedCell = true\r\n  fillMissed(x, y)\r\n  for(let i = 0; i < cells.length; i++){\r\n    for(let j = 0; j < cells[i].length; j++){\r\n      if(cells[i][j] === HITTED) cellsCopy[i][j] = HITTED\r\n    }\r\n  }\r\n  return { cells: cellsCopy, isLastHittedCell }\r\n\r\n  //fill all cells around killed ship and check if it's a last ship cell\r\n  function fillMissed(x, y){\r\n    if(!noShipsAround(x, y,cells)) isLastHittedCell = false\r\n    for(let i = x-1; i <= x+1; i++){\r\n      for(let j = y-1; j <= y+1; j++){\r\n        if(pointOutOfBounds(i, j)) continue\r\n        if(cellsCopy[i][j] === HITTED) {\r\n          cellsCopy[i][j] = MISSED\r\n          fillMissed(i, j)\r\n        }\r\n        cellsCopy[i][j] = MISSED\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction updateCellsArray(x, y, val, cells){\r\n  const cellsCopy = createCopy(cells)\r\n  cellsCopy[x][y] = val\r\n  return cellsCopy\r\n}\r\n\r\nfunction createShipsByAmount(amount, size, cells){\r\n  let posArr = []\r\n  for(let i = 0; i < amount; i++){\r\n    const position = createRandomShip(size, cells)\r\n    posArr.push(position)\r\n  }\r\n  return posArr\r\n}\r\n\r\nfunction createRandomShip(size, cells){\r\n  let position = getRandomShipPosition(size)\r\n  while(!shipFits(position, cells)){\r\n    position = getRandomShipPosition(size)\r\n  }\r\n  for(let i = 0; i < position.length; i++){\r\n    cells[position[i].x][position[i].y] = SHIP_CELL\r\n  }\r\n  return position\r\n}\r\n\r\nexport function createShip(positions, cells){\r\n  const cellsCopy = createCopy(cells)\r\n  if(!shipFits(positions,cells)) return null\r\n  for(let i = 0; i < positions.length; i++){\r\n    cellsCopy[positions[i].x][positions[i].y] = SHIP_CELL\r\n  }\r\n  return cellsCopy\r\n}\r\n\r\nexport function clearPositions(positions, cells){\r\n  const cellsCopy = createCopy(cells)\r\n  for(let i = 0; i < positions.length; i++){\r\n    cellsCopy[positions[i].x][positions[i].y] = EMPTY_CELL\r\n  }\r\n  return cellsCopy\r\n}\r\n\r\nfunction getRandomShipPosition(shipSize){\r\n  let shipPosition = [] //returned ship position array\r\n  const placement = Math.random() < 0.5 //vertical or horizontal\r\n  if(placement){\r\n    let { x, y } = getRandomStartPoint(cellsCount, cellsCount - shipSize)\r\n    for(let i = 0; i < shipSize; i++){\r\n      shipPosition.push({ x: x, y: y+i })\r\n    }\r\n  }else{\r\n    let { x, y } = getRandomStartPoint(cellsCount - shipSize, cellsCount)\r\n    for(let i = 0; i < shipSize; i++){\r\n      shipPosition.push({ x: x+i, y: y })\r\n    }\r\n  }\r\n  return shipPosition\r\n}\r\n\r\nfunction shipFits(position, cells){\r\n  for(let i = 0; i < position.length; i++){\r\n    const {x ,y} = position[i]\r\n    if(x >= cellsCount || y >= cellsCount) return false\r\n    if( !noShipsAround(x, y, cells) || cells[x][y] === SHIP_CELL ) return false\r\n  }\r\n  return true\r\n}\r\n\r\nexport function pointOutOfBounds(x, y){\r\n  return x < 0 || y < 0 || x > cellsCount-1 || y > cellsCount - 1\r\n}\r\n\r\nfunction createCopy(arr){\r\n  let newArr = []\r\n  newArr = arr.map((el) => el.slice())\r\n  return newArr\r\n}\r\n\r\nfunction getRandomStartPoint(xMax, yMax){\r\n  const x = getRandomInt(0, xMax)\r\n  const y = getRandomInt(0, yMax)\r\n  return { x: x, y: y }\r\n}\r\n","export const [ EMPTY_CELL, SHIP_CELL, HITTED, MISSED ] = [0, 1, 2, 3]\r\n","import { shotHandler, pointOutOfBounds } from './functions'\r\nimport { EMPTY_CELL, SHIP_CELL } from './constants'\r\nimport { getRandomInt } from './utils'\r\n\r\nlet hittedCells = []\r\n\r\nexport function aiTurn(cells, setter, changePlayer, aiWinsCallback){\r\n  let shot\r\n  if(hittedCells.length) {\r\n    shot = sightingAiShot(cells)\r\n  }else {\r\n    shot = randomAiShot(cells)\r\n  }\r\n  const shotInfo = shotHandler(shot.x, shot.y, cells, setter)\r\n  if(shotInfo.result === 'win'){\r\n    aiWinsCallback()\r\n  }else if(shotInfo.result === 'missed'){\r\n    changePlayer()\r\n  }else{\r\n    if(shotInfo.result === 'killed') aiReset()\r\n    //let ai shoot again on hit\r\n    setTimeout(() => {\r\n      aiTurn(shotInfo.arr, setter, changePlayer, aiWinsCallback)\r\n    }, 500)\r\n  }\r\n  return shotInfo\r\n}\r\n\r\nexport function aiReset(){\r\n  hittedCells = []\r\n}\r\n\r\nfunction randomAiShot(cells){\r\n  let availableCells = []\r\n\r\n  for(let i = 0; i < cells.length; i++){\r\n    for(let j = 0; j < cells[i].length; j++){\r\n      if(cells[i][j] === EMPTY_CELL || cells[i][j] === SHIP_CELL){\r\n        availableCells.push({x: i, y: j})\r\n      }\r\n    }\r\n  }\r\n  if(availableCells.length === 0) return\r\n\r\n  const randomShot = availableCells[getRandomInt(0, availableCells.length)]\r\n\r\n  if(cells[randomShot.x][randomShot.y] === SHIP_CELL){\r\n    hittedCells.push({x: randomShot.x, y: randomShot.y})\r\n  }\r\n\r\n  return randomShot\r\n}\r\n\r\nfunction sightingAiShot(cells){\r\n  const possiblePositions = calculatePossiblePositions(cells)\r\n\r\n  const index = getRandomInt(0,possiblePositions.length)\r\n\r\n  const sightingShot = possiblePositions[index]\r\n\r\n  if(cells[sightingShot.x][sightingShot.y] === SHIP_CELL){\r\n    hittedCells.push({x: sightingShot.x, y: sightingShot.y})\r\n  }\r\n\r\n  return sightingShot\r\n}\r\n\r\nfunction calculatePossiblePositions(cells){\r\n  let possiblePositions = []\r\n  hittedCells = hittedCells.sort((a,b) => {\r\n    if(a.x < b.x || a.y < b.y) return -1\r\n    else return 1\r\n  })\r\n  if(hittedCells.length === 1){\r\n    const {x, y} = hittedCells[0]\r\n    possiblePositions = [\r\n      {x: x-1, y: y},\r\n      {x: x+1, y: y},\r\n      {x: x, y: y-1},\r\n      {x: x, y: y+1},\r\n    ]\r\n  }else{\r\n    const {x: x1, y: y1} = hittedCells[0]\r\n    const {x: x2, y: y2} = hittedCells[hittedCells.length-1]\r\n    const direction = x1 !== x2\r\n    if(direction){\r\n      possiblePositions = [\r\n        {x: x1-1, y: y1},\r\n        {x: x2+1, y: y2},\r\n      ]\r\n    }else{\r\n      possiblePositions = [\r\n        {x: x1, y: y1-1},\r\n        {x: x2, y: y2+1},\r\n      ]\r\n    }\r\n  }\r\n  possiblePositions = possiblePositions.filter((pos) => {\r\n    if(pointOutOfBounds(pos.x, pos.y)) return false\r\n    const val = cells[pos.x][pos.y]\r\n    if(val === EMPTY_CELL || val === SHIP_CELL) return true\r\n    else return false\r\n  })\r\n\r\n  return possiblePositions\r\n}\r\n","import React from 'react'\r\nimport '../styles/Cell.css'\r\nimport { SHIP_CELL, HITTED, MISSED } from '../js/constants'\r\n\r\nexport let Cell = ({ cellValue, highlight }) => {\r\n  let cellClassName = ''\r\n  let cellContent = ''\r\n\r\n  if(cellValue === HITTED) {\r\n    cellClassName = 'hitted-cell'\r\n    cellContent = '╳'\r\n  }\r\n  else if(cellValue === MISSED){\r\n    cellClassName = 'missed-cell'\r\n    cellContent = '●'\r\n  }\r\n\r\n  if(cellValue === SHIP_CELL && highlight){\r\n    cellClassName += ' highlight-cell'\r\n  }\r\n\r\n  return (\r\n    <td className = {cellClassName}>\r\n      {cellContent}\r\n    </td>\r\n  )\r\n}\r\n\r\nCell = React.memo(Cell)\r\n","import React from 'react'\r\nimport { Cell } from './Cell.js'\r\nimport { range } from '../js/utils'\r\n\r\nimport '../styles/BattleField.css'\r\n\r\nexport const BattleField = ({\r\n  cellsArray,\r\n  clickCallback,\r\n  cellsHighlight,\r\n  player\r\n}) => {\r\n  const onClick = (e) => {\r\n    const target = e.target;\r\n    if(target.nodeName !== 'TD') return\r\n    if(clickCallback){\r\n      clickCallback(target.parentNode.rowIndex, target.cellIndex)\r\n    }\r\n  }\r\n\r\n  const renderedCells = cellsArray.map(( row, rowInd ) => {\r\n    const renderedRow = row.map(( cell, cellInd ) =>\r\n      <Cell key={'cell-' + cellInd} cellValue={cell} highlight={cellsHighlight}/>\r\n    )\r\n    return (\r\n      <tr key={'row-' + rowInd}>\r\n        {renderedRow}\r\n      </tr>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <div className = 'battlefield'>\r\n      <div className='numeration numeration-v'>\r\n        {range(1, 10).map((el,ind) =>\r\n          <span key={'nums'+ind}>\r\n            {el}\r\n          </span>\r\n        )}\r\n      </div>\r\n      <div>\r\n        <div className='numeration'>\r\n          {range('A',10).map((el,ind) =>\r\n            <span key={'letters'+ind}>\r\n              {el}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <table className = {player && 'player-table'} onClick = {onClick}>\r\n          <tbody>\r\n            {renderedCells}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport interact from 'interactjs'\r\n\r\nimport '../styles/Draggable.css'\r\n\r\nconst getIndices = (draggable, dropzone, size, rotate) => {\r\n  const {\r\n    top: draggableTop,\r\n    left: draggableLeft\r\n  } = draggable.getBoundingClientRect()\r\n  const {\r\n    top: dropzoneTop,\r\n    left: dropzoneLeft,\r\n    width: dropzoneW,\r\n    height: dropzoneH\r\n  } = dropzone.getBoundingClientRect()\r\n  let newLeft = Math.round(\r\n    (draggableLeft - dropzoneLeft)/dropzoneW*10\r\n  )\r\n  let newTop = Math.round(\r\n    (draggableTop - dropzoneTop)/dropzoneH*10\r\n  )\r\n  const indices = []\r\n  for (let i = 0; i < size; i++) {\r\n    indices.push(\r\n      rotate ? {\r\n        x: newTop + i,\r\n        y: newLeft\r\n      } : {\r\n        x: newTop,\r\n        y: newLeft + i\r\n      }\r\n    )\r\n  }\r\n  return indices\r\n}\r\n\r\nexport const indicesToPosition = (indices) => {\r\n  const {\r\n    width: cellW,\r\n    height: cellH\r\n  } = document.querySelector('td').getBoundingClientRect()\r\n  const dropzone = document.querySelector('.dropzone')\r\n  //+1 px table spacing\r\n  const top = indices[0].x * (cellH + 1) + dropzone.offsetTop\r\n  const left = indices[0].y * (cellW + 1)\r\n  return {top, left}\r\n}\r\n\r\nexport const ShipDraggable = ({\r\n  id,\r\n  position,\r\n  rotate,\r\n  dropped,\r\n  valid,\r\n  onShipDrop,\r\n  onShipDragStart,\r\n  onShipRotate,\r\n  updateShip\r\n}) => {\r\n  const size = +id[0]\r\n\r\n  const updateSelf = useCallback(\r\n    (position, rotate, dropped, valid) => {\r\n      updateShip(id, position, rotate, dropped, valid)\r\n    }, [updateShip, id]\r\n  )\r\n\r\n  const resetShip = useCallback(\r\n    (draggable) => {\r\n      updateSelf({x: 0, y: 0}, 0, false, true)\r\n    }, [updateSelf]\r\n  )\r\n\r\n  useEffect(() => {\r\n    interact('#draggable' + id).draggable({\r\n      listeners:{\r\n        start(e){\r\n          updateSelf(position, rotate, dropped, true)\r\n          if(!dropped) return\r\n          const draggable = e.target\r\n          const indices = JSON.parse(draggable.dataset.indices)\r\n          onShipDragStart(indices)\r\n        },\r\n        move(e){\r\n          updateSelf(\r\n            {x: position.x + e.dx, y: position.y + e.dy}, rotate, dropped, valid\r\n          )\r\n        },\r\n        end(e){\r\n          const dropzone = e.relatedTarget\r\n          const draggable = e.target\r\n          if(!dropzone){\r\n            resetShip(draggable)\r\n            return\r\n          }\r\n          const indices = getIndices(draggable, dropzone, size, rotate)\r\n          draggable.dataset.indices = JSON.stringify(indices)\r\n          const {top, left} = indicesToPosition(indices)\r\n          const fits = onShipDrop(indices)\r\n          updateSelf({x: left, y: top}, rotate, true, fits)\r\n        }\r\n      }\r\n    })\r\n  },[\r\n    onShipDragStart,\r\n    onShipDrop,\r\n    id,\r\n    position,\r\n    rotate,\r\n    dropped,\r\n    valid,\r\n    size,\r\n    updateSelf,\r\n    resetShip\r\n  ])\r\n\r\n  const onRotate = () => {\r\n    const draggable = document.querySelector('#draggable' + id)\r\n    const indices = JSON.parse(draggable.dataset.indices)\r\n    const newIndices = indices.map((ind, i) => {\r\n      const direction = rotate > 0 ? -1 : 1\r\n      return {x: ind.x + direction*i, y: ind.y - direction*i}\r\n    })\r\n    const fits = onShipRotate(indices, newIndices)\r\n    const outOfBounds = (indices[0].x > 10 - size) || (indices[0].y > 10 - size)\r\n    let r = rotate > 0 ? 0 : 90\r\n    if(outOfBounds) r = rotate\r\n    updateSelf({x: position.x, y: position.y}, r, dropped, fits)\r\n    if(fits){\r\n      draggable.dataset.indices = JSON.stringify(newIndices)\r\n    }\r\n  }\r\n\r\n  const onDelete = () => {\r\n    const draggable = document.querySelector('#draggable' + id)\r\n    onShipDragStart(JSON.parse(draggable.dataset.indices))\r\n    resetShip(draggable)\r\n  }\r\n\r\n  let offsetLeft = 0\r\n  let offsetTop = 0\r\n\r\n  if(!dropped){\r\n    offsetLeft = 4\r\n    offsetTop = 4\r\n    if(size === 4) {\r\n      offsetLeft = 92\r\n    }\r\n    if(size === 3){\r\n      offsetLeft = 122\r\n      offsetTop += 40\r\n    }\r\n    if(size === 2){\r\n      offsetTop += 40\r\n    }\r\n  }\r\n\r\n  const style = {\r\n    transform: 'rotate(' + rotate + 'deg)',\r\n    top: position.y + offsetTop + 'px',\r\n    left: position.x + offsetLeft + 'px'\r\n  }\r\n\r\n  const renderedCells = []\r\n  for(let i = 0; i < size; i++){\r\n    renderedCells.push(<td key={'draggable-cell' + i + size}></td>)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      id = {'draggable' + id}\r\n      className = {'draggable ' + (!valid && 'error')}\r\n      style = {style}\r\n    >\r\n      {(dropped) &&\r\n        <div>\r\n          {size > 1 &&\r\n            <button\r\n              onClick = {onRotate}\r\n              className = 'rotate-btn'>\r\n              ↻\r\n            </button>\r\n          }\r\n          <button\r\n            onClick = {onDelete}\r\n            className = 'delete-btn'>\r\n            X\r\n          </button>\r\n        </div>\r\n      }\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            {renderedCells}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport interact from 'interactjs'\r\n\r\nexport const ShipDropzone = ({ children }) => {\r\n  useEffect(() => {\r\n    interact('.dropzone').dropzone({\r\n      accept: '.draggable',\r\n      overlap: .9,\r\n    })\r\n    const dropzone = document.querySelector('.dropzone')\r\n    const playerField = document.querySelector('.player-table')\r\n    const shipPicker = document.querySelector('.ship-picker')\r\n    dropzone.style.top = playerField.offsetTop - shipPicker.offsetTop + 'px'\r\n    dropzone.style.width = playerField.offsetWidth + 'px'\r\n    dropzone.style.height = playerField.offsetHeight + 'px'\r\n  },[])\r\n\r\n  return (\r\n    <div className = 'dropzone'>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { ShipDraggable, indicesToPosition } from './ShipDraggable'\r\nimport { ShipDropzone } from './ShipDropzone'\r\nimport '../styles/ShipPicker.css'\r\n\r\nconst pickerShipsInit = {\r\n  '1-1': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '1-2': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '1-3': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '1-4': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '2-1': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '2-2': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '2-3': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '3-1': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '3-2': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n  '4-1': {position: {x: 0, y: 0}, rotate: 0, dropped: false, valid: true},\r\n}\r\n\r\nexport const ShipPicker = ({\r\n    onShipDrop,\r\n    onShipDragStart,\r\n    onSetRandom,\r\n    onShipRotate,\r\n    onReady,\r\n    onResetAll,\r\n    visible\r\n  }) => {\r\n\r\n  const [pickerShips, setPickerShips] = useState(pickerShipsInit)\r\n\r\n  useEffect(() => {\r\n    let ready = true\r\n    for(let id in pickerShips){\r\n      ready &= pickerShips[id].dropped && pickerShips[id].valid\r\n    }\r\n    onReady(ready)\r\n  })\r\n\r\n  const updateShip = (\r\n    id,\r\n    position = {x: 0, y: 0},\r\n    rotate = 0,\r\n    dropped = false,\r\n    valid = false\r\n  ) => {\r\n    const copy = {...pickerShips}\r\n    copy[id] = {position, rotate, dropped, valid}\r\n    setPickerShips(copy)\r\n  }\r\n\r\n  const setRandom = () => {\r\n    const positions = onSetRandom()\r\n    const pickerShipsCopy = {...pickerShips}\r\n    for(let size in positions){\r\n      const positionsArr = positions[size]\r\n      for(let i = 0; i < positionsArr.length; i++){\r\n        const id = size + '-' + (i+1)\r\n        const draggable = document.querySelector('#draggable' + id)\r\n        draggable.dataset.indices = JSON.stringify(positionsArr[i])\r\n        const {top: y, left: x} = indicesToPosition(positionsArr[i])\r\n        const rotate =\r\n          size > 1 && positionsArr[i][0].x !== positionsArr[i][1].x ? 90 : 0\r\n        pickerShipsCopy[id] = {\r\n          position: {x, y},\r\n          dropped: true,\r\n          rotate: rotate,\r\n          valid: true\r\n        }\r\n      }\r\n    }\r\n    setPickerShips(pickerShipsCopy)\r\n  }\r\n\r\n  const resetAll = () => {\r\n    onResetAll()\r\n    setPickerShips(pickerShipsInit)\r\n  }\r\n\r\n  const renderedShips = []\r\n\r\n  for(let id in pickerShips){\r\n    const {position, rotate, dropped, valid} = pickerShips[id]\r\n    renderedShips.push(\r\n      <ShipDraggable\r\n        key = {id}\r\n        id = {id}\r\n        position = {position}\r\n        rotate = {rotate}\r\n        dropped = {dropped}\r\n        valid = {valid}\r\n        onShipDrop = {onShipDrop}\r\n        onShipDragStart = {onShipDragStart}\r\n        onShipRotate = {onShipRotate}\r\n        updateShip = {updateShip}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className = 'ship-picker'\r\n      style = {{display: visible ? 'flex' : 'none'}}\r\n    >\r\n      {renderedShips}\r\n      <div className = 'button-container'>\r\n        <button onClick = {resetAll}>\r\n          ✖\r\n        </button>\r\n        <button onClick = {setRandom}>\r\n          <span role='img' aria-label='dice'>🎲</span>\r\n        </button>\r\n      </div>\r\n      <ShipDropzone />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { create2DArray } from './js/utils'\r\nimport { EMPTY_CELL } from './js/constants'\r\nimport {\r\n  createRandomShips,\r\n  shotHandler,\r\n  createShip,\r\n  clearPositions\r\n} from './js/functions'\r\nimport { aiTurn, aiReset } from './js/ai'\r\n\r\nimport './styles/App.css';\r\n\r\nimport { BattleField } from './components/BattleField'\r\nimport { ShipPicker } from './components/ShipPicker'\r\n\r\nconst [SETUP, STARTED, FINISHED] = [0, 1, 2]\r\n\r\nlet prevPlayerArr = null\r\n\r\nconst createRandomArray = () => {\r\n  return createRandomShips(create2DArray(10, 10, EMPTY_CELL)).cells\r\n}\r\n\r\nconst initialPlayerArr = create2DArray(10,10, EMPTY_CELL)\r\nconst initialAiArr = createRandomArray()\r\n\r\nconst App = () => {\r\n  const [ playerArr, setPlayerArr ] = useState(initialPlayerArr)\r\n  const [ aiArr, setAiArr ] = useState(initialAiArr)\r\n  const [ currentPlayer, setCurrentPlayer ] = useState('Player')\r\n  const [ gameState, setGameState ] = useState(SETUP)\r\n  const [gameBtnDisabled, setGameBtnDisabled] = useState(true)\r\n\r\n  const onCellClick = (x, y) => {\r\n    if(gameState !== STARTED) return\r\n    if(currentPlayer === 'Ai') return\r\n    const shotInfo = shotHandler(x, y, aiArr, setAiArr)\r\n    if(shotInfo.result === 'win'){\r\n      setGameState(FINISHED)\r\n      alert('You win!')\r\n      return\r\n    }\r\n    else if(shotInfo.result === 'missed'){\r\n      setCurrentPlayer('Ai')\r\n      setTimeout(() => {\r\n        aiTurn(playerArr,\r\n          setPlayerArr,\r\n          () => { setCurrentPlayer('Player') },\r\n          () => { setGameState(FINISHED); alert('Ai wins!') }\r\n        )\r\n      }, 500)\r\n    }\r\n  }\r\n\r\n  const pickerDrop = (positions) => {\r\n    const newArr = createShip(positions, playerArr)\r\n    if(newArr === null) return false\r\n    setPlayerArr(newArr)\r\n    return true\r\n  }\r\n\r\n  const pickerDragStart = (positions) => {\r\n    setPlayerArr(clearPositions(positions, playerArr))\r\n  }\r\n\r\n  const pickerSetRandom = () => {\r\n    const randomShips = createRandomShips(create2DArray(10,10,EMPTY_CELL))\r\n    setPlayerArr(randomShips.cells)\r\n    return randomShips.positions\r\n  }\r\n\r\n  const pickerRotate = (indices, newIndices) => {\r\n    const cleared = clearPositions(indices, playerArr)\r\n    const newArr = createShip(newIndices, cleared)\r\n    if(newArr === null) {\r\n      setPlayerArr(cleared)\r\n      return false\r\n    }\r\n    setPlayerArr(newArr)\r\n    return true\r\n  }\r\n\r\n  const pickerResetAll = () => {\r\n    setPlayerArr(initialPlayerArr)\r\n  }\r\n\r\n  const pickerReady = (ready) => {\r\n    setGameBtnDisabled(!Boolean(ready))\r\n  }\r\n\r\n  const onGameBtnClick = () => {\r\n    if(gameState === SETUP){\r\n      setCurrentPlayer('Player')\r\n      setGameState(STARTED)\r\n      prevPlayerArr = playerArr.map((arr) => arr.slice())\r\n      aiReset()\r\n    }\r\n    else{\r\n      setGameState(SETUP)\r\n      if(prevPlayerArr) setPlayerArr(prevPlayerArr)\r\n      else setPlayerArr(initialPlayerArr)\r\n      prevPlayerArr = null\r\n      setAiArr(createRandomArray())\r\n    }\r\n  }\r\n\r\n  const gameBtnTitle = gameState === SETUP ? 'Start' : 'Restart'\r\n  let infoMessage = ''\r\n  if(gameState === SETUP) infoMessage = 'Setup your field'\r\n  if(gameState === FINISHED) infoMessage = currentPlayer + ' Wins!'\r\n  if(gameState === STARTED) infoMessage = currentPlayer + ' turn'\r\n\r\n  return (\r\n    <div className='app'>\r\n      <div className='game-container'>\r\n        <div className = 'info-container'>\r\n          <span className = {gameState === FINISHED ? 'highlight-info' : ''}>\r\n            {infoMessage}\r\n          </span>\r\n          <button\r\n            className = 'game-btn'\r\n            onClick = {onGameBtnClick}\r\n            disabled = {gameBtnDisabled}>\r\n            {gameBtnTitle}\r\n          </button>\r\n        </div>\r\n        <ShipPicker\r\n          onShipDrop = {pickerDrop}\r\n          onShipDragStart = {pickerDragStart}\r\n          onSetRandom = {pickerSetRandom}\r\n          onShipRotate = {pickerRotate}\r\n          onReady = {pickerReady}\r\n          onResetAll = {pickerResetAll}\r\n          visible = {gameState === SETUP}\r\n        />\r\n        <BattleField\r\n          cellsArray = {playerArr}\r\n          cellsHighlight = {true}\r\n          player = {true} />\r\n        <BattleField\r\n          cellsArray = {aiArr}\r\n          clickCallback = {onCellClick}\r\n          cellsHighlight = {gameState === FINISHED} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}